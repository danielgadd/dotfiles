so ~/.shell/vim/plugins.vim

" My vimrc

"Disabled - VIM is too hard!
"=== Make Vim Hard! ==="
"let g:hardtime_default_on = 1
"let g:list_of_disabled_keys = ["<UP>", "<DOWN>", "<LEFT>", "<RIGHT>"]
"let g:hardtime_ignore_buffer_patterns = [ "CustomPatt[ae]rn", "NERD.*" ]

"=== Appearance === "

  "set colorscheme
    colorscheme gruvbox
    set bg=dark

  "Stop vim from triggering a bell in terminals"
    set noerrorbells

  "dont show current mode down the bottom, we have a plugin for that
    set noshowmode

  "show line numbers
    set number
    set relativenumber

  "change the terminal's title
    set title
    set titlestring=%F\ -\ vim
    set laststatus=2

  "dont wrap lines
    set wrap

  "wrap lines at convenient points
    set linebreak

  "show incomplete cmds down the bottom
    set showcmd

  "show current position
    set ruler

  "tell vim the terminal has 256 colors
    set t_Co=256
    set termguicolors

  "highlight annoying whitespace
    autocmd filetype html,xml set listchars-=tab:>. "execpt where highlighting is annoying

  " Change Comment colour from blue to cyan
    highlight comment ctermfg=cyan

  "folding settings
    set foldmethod=indent   "fold based on indent
    set foldnestmax=3       "deepest fold is 3 levels
    set nofoldenable        "dont fold by default

  "vertical/horizontal scroll off settings
    set scrolloff=999
    set sidescrolloff=7
    set sidescroll=1

  "Unset the above scroll to default for git commits,
  "Its REALLY annoying in VSCode with a small terminal frame!
    autocmd Filetype gitcommit set scrolloff=0

  "use mouse support
    set mouse=a
    set ttymouse=xterm2

"=== File Behaviour ==="

    set expandtab
    set smarttab
    set breakindent
    set nostartofline

  "default indent settings
    set shiftwidth=2
    set softtabstop=2
    set autoindent
    set fo=tcq

  "allow backspacing over everything in insert mode
    set backspace=indent,eol,start

"=== Search ==="

  "find the next match as we type the search
    set incsearch

  "hilight searches by default
    set hlsearch

  "Ignore case when searching
    set smartcase

"=== Vim commands and Buffers ==="

  "store lots of :cmdline history
    set history=1000

  "I like buffers and undo buffers, so dont close them
    set hidden

  "set wildmenu tab completion for cmdline
    set wildmode=list:longest   "make cmdline tab completion similar to bash
    set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
    set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
    set formatoptions-=o        "dont continue comments when pushing o/O

" === Syntax Highlighting ==="

  "load filetype-plugins and indent files
    filetype plugin on
    filetype indent on

  "turn on syntax highlighting
    syntax enable

  "Enable Vim to read the firstline of a file for applying auto-settings
    set modeline

  "Setup clipboard
    set clipboard=unnamedplus
    set wildmenu

    if has('mac')
      set clipboard=unnamed
    endif

" === File Management... Well lack there of ==="

  "never ever let Vim write a backup file!
  "Use modern ways for tracking your changes, for Godâ€™s sake.
    set nobackup
    set nowb
    set noswapfile

  "set autoread to update files if saved externally to vim
    set autoread

"=== Plugin Settings ==="

  "nerdtree settings
    let g:NERDTreeMouseMode = 2
    let g:NERDTreeWinSize = 40
    let g:NERDTreeNodeDelimiter = "\u00a0"

  "gruvbox
    let g:gruvbox_vert_split = 'bg1'
    let g:gruvbox_sign_column = 'bg0'

   let g:lightline = {
    \ 'colorscheme': 'wombat',
    \     'active': {
    \         'left': [['mode', 'paste' ], ['readonly', 'filename', 'modified']],
    \         'right': [['lineinfo'], ['percent'], ['gitbranch', 'fileformat', 'filetype', 'fileencoding']]
    \     },
    \     'component_function': {
    \         'gitbranch': 'gitbranch#name'
    \     }
    \ } "lightline


"=== Bindings ===*

  "explorer mappings
    nnoremap <f2> :NERDTreeToggle<cr>

  "open *.md files in Google to preview them
    noremap <F5> :!open -a "Google Chrome" %

  "map paste for insert mode
    set pastetoggle=<f12>

  "fzf
    map <C-p> :Files<CR>
    map <C-b> :Buffers<CR>

  "Remap ; to : (so dont need to hit shift+;)
    map ; :
    map ; :

  "I like tabs so... set shortcuts for tab commands
    map tt :tabnext<CR>
    map tn :tabnew<CR>
    map td :tabclose<CR>

  "Map some useful Git Commands
   noremap cn :cnext<CR>
